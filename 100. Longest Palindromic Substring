Question Link : https://leetcode.com/problems/longest-palindromic-substring/description/

Solution : 

class Solution {
    // https://www.youtube.com/watch?v=fxwvVnBMN6I&ab_channel=CodewithAlisha
    // https://www.youtube.com/watch?v=_wP9mWNPL5w&ab_channel=takeUforward
	public:
   	string longestPalindrome(string S) {   
	    	int n = S.size();
        vector<vector<int>>dp(n,vector<int>(n,0)); //dp[i][j] => length of palindrome from i to j
        
        int start = 0,maxLen = 0;
        for(int diff = 0 ; diff < n ; diff++){
            for(int i=0,j=i+diff; j<n; i++,j++){
                if(i == j) dp[i][j] = 1;
                else if(diff == 1){
                    if(S[i] == S[j]) dp[i][j] = 2;
                }
                else if(S[i] == S[j] && dp[i+1][j-1] > 0){
                    dp[i][j] = 2 + dp[i+1][j-1];
                }
                
                if(dp[i][j] > maxLen){
                    start = i;
                    maxLen = dp[i][j];
                }
            }
        }
        
        return S.substr(start,maxLen);
	}
};
