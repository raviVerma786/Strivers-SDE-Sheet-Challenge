Question Link : https://www.codingninjas.com/studio/problems/bottom-view-of-binary-tree_8230745?challengeSlug=striver-sde-challenge&leftPanelTab=1
https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1

Solution: 

//https://youtu.be/0FtVY6I4pB8
vector<int> bottomView(BinaryTreeNode<int> * root){
    map<int,int> mp; // mp[pos] => last value at that position (position is sorted from left to right)
    queue<pair<int,BinaryTreeNode<int>*>> q; //for level order traversal {pos,node}
    q.push({0,root});

    while(!q.empty()){
        int n = q.size();
        while(n--){
            BinaryTreeNode<int>* node = q.front().second;
            int pos = q.front().first;
            q.pop();

            mp[pos] = node->data;

            if(node->left) q.push({pos - 1,node->left});
            if(node->right) q.push({pos + 1,node->right});
        }
    }
    
    vector<int> ans;
    for(pair<int,int> p : mp){
        ans.push_back(p.second);
    }

    return ans;
}
