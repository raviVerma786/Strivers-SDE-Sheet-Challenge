Question Link : https://www.codingninjas.com/studio/problems/top-view-of-binary-tree_8230721?challengeSlug=striver-sde-challenge&leftPanelTab=1
https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1

Solution : 

//https://youtu.be/Et9OCDNvJ78
#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
vector<int> getTopView(TreeNode<int> *root) {
   if(!root) return {};
   map<int,int> mp; //stores mp[pos] = value; only first occurance of pos is seen from top
   queue<pair<int,TreeNode<int>*>> q; //{position,node}
   q.push({0,root});

   while(!q.empty()){
       int n = q.size();
       while(n--){
           TreeNode<int>* node = q.front().second;
           int pos = q.front().first;
           q.pop();

           if(mp.count(pos) == 0) mp[pos] = node->val;

           if(node->left) q.push({pos-1,node->left});
           if(node->right) q.push({pos+1,node->right});
       }
   }

   vector<int> ans;
   for(pair<int,int> p : mp){
       ans.push_back(p.second);
   }

   return ans;
}
