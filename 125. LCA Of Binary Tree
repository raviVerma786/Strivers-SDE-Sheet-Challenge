Question Link : https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/
https://www.codingninjas.com/studio/problems/lca-of-binary-tree_8230760?challengeSlug=striver-sde-challenge&leftPanelTab=1

Solution 1 : 
//https://youtu.be/_-QHfMDde90
TreeNode<int>* lca(TreeNode<int>*root,int x,int y){
    if(!root) return NULL;
    if(root->data == x || root->data == y) return root;

    TreeNode<int>*left = lca(root->left, x, y);
    TreeNode<int>*right = lca(root->right, x, y);

    if(!left) return right;
    else if(!right) return left;

    return root;
}
int lowestCommonAncestor(TreeNode<int> *root, int x, int y) {
   TreeNode<int>* ans = lca(root,x,y);

   return !ans ? -1 : ans->data;
}

Solution 2 :

int lowestCommonAncestor(TreeNode<int> *root, int x, int y) {
    if(!root) return -1;
    if(root->data == x || root->data == y) return root->data;

    int left = lowestCommonAncestor(root->left, x, y);
    int right = lowestCommonAncestor(root->right, x, y);

    if(left == -1) return right;
    else if(right == -1) return left;

    return root->data;
}
