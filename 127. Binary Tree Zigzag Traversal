Question Link : https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/
https://www.codingninjas.com/studio/problems/binary-tree-zigzag-traversal_8230796?challengeSlug=striver-sde-challenge&leftPanelTab=1

Solution : 

//https://youtu.be/3OXWEdlIGl4
vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int> ans;
    if(!root) return ans;

    bool isReverse = false;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);
    
    while(!q.empty()){
        int n = q.size();
        vector<int> temp;

        for(int i=0;i<n;i++){
            BinaryTreeNode<int>* node = q.front();
            q.pop();

            temp.push_back(node->data);

            if(node->left) q.push(node->left);
            if(node->right) q.push(node->right);
        }

        if(isReverse) reverse(temp.begin(),temp.end());
        ans.insert(ans.end(),temp.begin(),temp.end());

        isReverse = !isReverse;
    }

    return ans;
} 
