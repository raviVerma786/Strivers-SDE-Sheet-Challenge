Question Link : https://www.codingninjas.com/studio/problems/children-sum-property_8230711?challengeSlug=striver-sde-challenge&leftPanelTab=1

Solution : (My Solution)

int findMaximum(BinaryTreeNode<int>*root){
    if(!root) return 0;

    int left = findMaximum(root->left);
    int right = findMaximum(root->right);

    return max(root->data,max(left,right));
}

void helper(BinaryTreeNode<int>*root,int maxEle){
    if(!root) return;

    helper(root->left,maxEle);
    helper(root->right,maxEle);

    if(!root->left && !root->right) root->data = maxEle;
    else{
        int left = root->left ? root->left->data : 0;
        int right = root->right ? root->right->data : 0;

        root->data = left + right;
    }
}
void changeTree(BinaryTreeNode < int > * root) {
   int maxEle = findMaximum(root);
   helper(root,maxEle);
}  


Solution 2 : optimal

// https://youtu.be/fnmisPM6cVo

void changeTree(BinaryTreeNode < int > * root) {
   if(!root) return;

   int childrenSum = 0;
   if(root->left) childrenSum += root->left->data;
   if(root->right) childrenSum += root->right->data;

   if(childrenSum >= root->data) root->data = childrenSum;
   else{
       if(root->left) root->left->data = root->data;
       if(root->right) root->right->data = root->data;
   }

   changeTree(root->left);
   changeTree(root->right);

   int sum = 0;
   if(root->left) sum += root->left->data;
   if(root->right) sum += root->right->data;
   if(root->left || root->right) root->data = sum;
}  
