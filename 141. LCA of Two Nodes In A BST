Question Link : https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/description/
https://www.codingninjas.com/studio/problems/lca-of-two-nodes-in-a-bst_8230778?challengeSlug=striver-sde-challenge&leftPanelTab=0

Solution : 
//https://youtu.be/cX_kPV_foZc
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
      if(!root || root==p || root==q) return root;
      
        if(root->val < p->val && root->val < q->val)
            return lowestCommonAncestor(root->right,p,q);
            
        if(root->val > p->val && root->val > q->val)
            return lowestCommonAncestor(root->left,p,q);
            
        return root;
    }
};
