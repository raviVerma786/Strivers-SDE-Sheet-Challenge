Question Link : https://leetcode.com/problems/binary-search-tree-iterator/description/
https://www.codingninjas.com/studio/problems/bst-iterator_8230815?challengeSlug=striver-sde-challenge&leftPanelTab=1

Solution : 

class BSTIterator {
    // https://www.youtube.com/watch?v=D2jMcmxU4bs&ab_channel=takeUforward
private:
    stack<TreeNode*> st;

    void pushAll(TreeNode* node){
        while(node){
            st.push(node);
            node = node->left;
        }
    }
public:
    BSTIterator(TreeNode* root) {
        pushAll(root);
    }
    
    int next() {
        TreeNode* node = st.top();
        st.pop();

        if(node->right) pushAll(node->right);

        return node->val;
    }
    
    bool hasNext() {
        return !st.empty();
    }
};
