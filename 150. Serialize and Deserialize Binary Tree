Question Link : https://leetcode.com/problems/serialize-and-deserialize-binary-tree/description/
https://www.codingninjas.com/studio/problems/serialize-and-deserialize-binary-tree_8230748?challengeSlug=striver-sde-challenge

solution : 

//  https://youtu.be/-YbXySKJsX8
class Codec {
public:
    // Encodes a tree to a single string.
    string serialize(TreeNode* root) {
       if(!root) return "";
       string s="";
       queue<TreeNode*> q;
       q.push(root);

       while(!q.empty()){
           TreeNode* node = q.front();
           q.pop();

           if(!node) s += "N,";
           else s += to_string(node->val) + ",";

           if(node != NULL){
               q.push(node->left);
               q.push(node->right);
           }
       }
       return s;
    }

    // Decodes your encoded data to tree.
    TreeNode* deserialize(string data) {
        if(data.size() == 0) return NULL;

        stringstream s(data);
        string str;
        getline(s,str,',');

        TreeNode* root = new TreeNode(stoi(str));
        queue<TreeNode*> q;
        q.push(root);

        while(!q.empty()){
            TreeNode* node = q.front();
            q.pop();

            getline(s,str,',');
            if(str == "N"){
                node->left = NULL;
            }else{
                node->left = new TreeNode(stoi(str));
                q.push(node->left);
            }

            getline(s,str,',');
            if(str == "N"){
                node->right = NULL;
            }else{
                node->right = new TreeNode(stoi(str));
                q.push(node->right);
            }
        }

        return root;
    }
};
