Question Link : https://leetcode.com/problems/clone-graph/
https://www.codingninjas.com/studio/problems/clone-graph_8230812?challengeSlug=striver-sde-challenge&leftPanelTab=1

Solution : 

class Solution {
public:
// https://www.youtube.com/watch?v=0QG3dxfqIy4&ab_channel=AyushiSharma
// https://www.youtube.com/watch?v=GUsMMhN_Quo&ab_channel=CodeFreaks

    Node* cloneGraph(Node* node) {
        if(node == NULL)
            return NULL;
        unordered_map<int, Node*> visited;
        return clone(node , visited);
    }
    
    Node *clone(Node* node, unordered_map<int,Node*>& visited)
    {
        Node *new_node = new Node(node->val);
        visited.insert({node->val,new_node});
        
        for(Node *n : node->neighbors){
            auto it = visited.find(n -> val);
            if(it == visited.end())
            {
                Node *cn = clone(n, visited);
                new_node->neighbors.push_back(cn);
            }
            else
            {
                new_node->neighbors.push_back(it -> second);
            }
        }
        return new_node;
    }
    
};
