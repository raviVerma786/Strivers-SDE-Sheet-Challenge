Question Link : https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1
https://www.codingninjas.com/studio/problems/cycle-detection-in-undirected-graph_8230798?challengeSlug=striver-sde-challenge&leftPanelTab=0

Solution : 

#include<bits/stdc++.h>

// https://youtu.be/BPlrALf1LDU
//https://youtu.be/zQ3zgFypzX4
bool isCyclePresent(vector<int>adj[],int node,int parent,vector<bool>&vis){
    vis[node] = true;

    for(int child : adj[node]){
        if(!vis[child]){
            if(isCyclePresent(adj, child, node, vis)) return true;
        }
        else if(child != parent) return true;
    }

    return false;
}
string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    vector<int> adj[n+1];
    for(int i=0;i<m;i++){
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);
    }
    
    vector<bool> vis(n+1,false);
    for(int i=1;i<=n;i++){
        if(!vis[i]){
            if(isCyclePresent(adj,i,-1,vis)) return "Yes";
        }
    }

    return "No";
}
