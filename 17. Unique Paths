Question Link :https://www.codingninjas.com/codestudio/problems/unique-paths_8230802?challengeSlug=striver-sde-challenge&leftPanelTab=0
                https://leetcode.com/problems/unique-paths/description/

Solution (Recursive Solution): 

int helper(int m,int n,int i,int j,vector<vector<int>>&dp){
	if(i == m-1 && j==n-1) return 1;
	if(i >= m || j>=n) return 0;
	if(dp[i][j] != -1) return dp[i][j];

	return dp[i][j] = helper(m,n,i+1,j,dp) + helper(m,n,i,j+1,dp);
}

int uniquePaths(int m, int n) {
	vector<vector<int>>dp(m,vector<int>(n,-1));
	return helper(m,n,0,0,dp);
}


Solution 2 : (More Optimal Solution) : 

int uniquePaths(int m, int n) {
	//ans is (m+n-2)C(n-1)  and this can also said (m+n-2)C(m-1)

	int N = (m + n - 2),
	r = min(m-1,n-1);
    
	int ans = 1;
	for(int i=1;i<=r;i++){
		ans = ans * (N - r + i)/i;
	}

	return ans;
}
