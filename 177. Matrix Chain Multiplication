Question Link : https://practice.geeksforgeeks.org/problems/matrix-chain-multiplication0303/1
https://www.codingninjas.com/studio/problems/matrix-chain-multiplication_8230769?challengeSlug=striver-sde-challenge&leftPanelTab=1

Solution 1 : Recursive solution TC : O(n*n*n)  SC : O(n*n) + O(n)

#include <bits/stdc++.h> 

// https://youtu.be/vRVfmbCFW7Y
int helper(vector<int>&arr,int i,int j,vector<vector<int>>&dp){
    if(i == j) return 0;
    if(dp[i][j] != -1) return dp[i][j];
    
    int mini = INT_MAX;
    for(int k = i;k<j;k++){
        int operations = (arr[i-1] * arr[k] * arr[j]) + helper(arr,i,k,dp) + helper(arr,k+1,j,dp);
        mini = min(mini,operations);
    } 
    return dp[i][j] = mini;
}

int matrixMultiplication(vector<int> &arr, int N)
{
    vector<vector<int>> dp(N,vector<int>(N,-1));
    return helper(arr,1,N-1,dp);
}


Solution 2 : Iterative of the recursive code TC : O(n*n*n)  SC : O(n*n)

#include <bits/stdc++.h> 

// https://www.youtube.com/watch?v=pDCXsbAw5Cg&ab_channel=takeUforward

int matrixMultiplication(vector<int> &arr, int N)
{
    vector<vector<int>> dp(N+1,vector<int>(N+1,0));
    for(int i=N-1;i>=0;i--){
        for(int j=i+1;j<N;j++){
            int mini = INT_MAX;
            for(int k=i;k<j;k++){
                int operations = (arr[i-1] * arr[k] * arr[j]) + dp[i][k] + dp[k+1][j];
                mini = min(mini,operations);
            }

            dp[i][j] = mini;
        }
    }

    return dp[1][N-1];
}
