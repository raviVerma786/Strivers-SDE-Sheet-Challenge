Question : https://www.codingninjas.com/codestudio/problems/subsets-ii_8230855?challengeSlug=striver-sde-challenge&leftPanelTab=1
           https://leetcode.com/problems/subsets-ii/description/

Solution 1: 

void helper(vector<int>&nums,vector<int>&temp,int i,set<vector<int>>&st){
    if(i == nums.size()){
        st.insert(temp);
        return;
    }
    
    helper(nums,temp,i+1,st);

    temp.push_back(nums[i]);
    helper(nums,temp,i+1,st);
    temp.pop_back();
}

vector<vector<int>> uniqueSubsets(int n, vector<int> &nums)
{
        sort(nums.begin(),nums.end());
        
        vector<int>temp;
        set<vector<int>>st;
        helper(nums,temp,0,st);
        
        vector<vector<int>>ans(st.begin(),st.end());
        return ans;
}


Solution 2: (Optimal Solution)

void helper(vector<int>&nums,vector<int>&temp,int i,vector<vector<int>>&ans){
    ans.push_back(temp);
    
    for(int j=i;j<nums.size();j++){
        if(j != i && nums[j] == nums[j-1]) continue;
        
        temp.push_back(nums[j]);
        helper(nums,temp,j+1,ans);
        temp.pop_back();
    }
    
}

vector<vector<int>> uniqueSubsets(int n, vector<int> &nums)
{
        sort(nums.begin(),nums.end());
        
        vector<int>temp;
        vector<vector<int>>ans;
        helper(nums,temp,0,ans);
        
        return ans;
}

