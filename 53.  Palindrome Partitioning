Question Link : https://leetcode.com/problems/palindrome-partitioning/description/
    https://www.codingninjas.com/codestudio/problems/palindrome-partitioning_8230726?challengeSlug=striver-sde-challenge&leftPanelTab=1

Solution :

#include <bits/stdc++.h> 

bool isPalindrome(string str){
    int i= 0,j=str.size() - 1;

    while(i < j){
        if(str[i] != str[j]) return false;
        i++;
        j--;
    }

    return true;
}

void helper(string s,vector<vector<string>>&ans,vector<string>&v,int i){
    if(i == s.size()){
        ans.push_back(v);
        return;
    }
    
    string temp = "";
    for(int j=i;j<s.size();j++){
        temp.push_back(s[j]);
        if(isPalindrome(temp)){
            v.push_back(temp);
            helper(s,ans,v,j+1);
            v.pop_back();
        }
    }
}

vector<vector<string>> partition(string &s) {
    vector<vector<string>>ans;
    vector<string> v;

    helper(s,ans,v,0);

    return ans;
}
