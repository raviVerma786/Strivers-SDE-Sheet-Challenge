Question Link : https://www.codingninjas.com/codestudio/problems/k-most-frequent-elements_8230853?challengeSlug=striver-sde-challenge&leftPanelTab=1
https://leetcode.com/problems/top-k-frequent-elements/

Solution : 

#include <bits/stdc++.h> 
vector<int> KMostFrequent(int n, int k, vector<int> &nums)
{
     //stores pair<frequency,element>
       priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        
        sort(nums.begin(),nums.end());
        int i = 0;
        while(i < n){
            int ele = nums[i], cnt = 0;
            while(i<n && nums[i] == ele){
                cnt++;
                i++;
            }

            if(pq.size() == k){
                if(pq.top().first < cnt){
                    pq.pop();
                    pq.push({cnt,ele});
                }
            }else{
                pq.push({cnt,ele});
            }
        }
        vector<int> ans;
        while (!pq.empty()) {
          ans.push_back(pq.top().second);
          pq.pop();
        }

        sort(ans.begin(),ans.end());
        return ans;
}
